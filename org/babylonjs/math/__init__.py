from org.Babylonjs.utils import BABYLON, _js_class, _js_math_class
"""autogenerated wrapper stubs for Babylonjs math module"""

# manually copiedfrom babylon.math.scalar.ts
TwoPi = BABYLON.Scalar.TwoPi
WithinEpsilon = BABYLON.Scalar.WithinEpsilon
ToHex = BABYLON.Scalar.ToHex
Sign = BABYLON.Scalar.Sign
Clamp = BABYLON.Scalar.Clamp
Log2 = BABYLON.Scalar.Log2
Repeat = BABYLON.Scalar.Repeat
Normalize = BABYLON.Scalar.Normalize
Denormalize = BABYLON.Scalar.Denormalize
DeltaAngle = BABYLON.Scalar.DeltaAngle
MoveTowards = BABYLON.Scalar.MoveTowards
MoveTowardsAngle = BABYLON.Scalar.MoveTowardsAngle
Lerp = BABYLON.Scalar.Lerp
LerpAngle = BABYLON.Scalar.LerpAngle
Hermite = BABYLON.Scalar.Hermite
RandomRange = BABYLON.Scalar.RandomRange
RangeToPercent = BABYLON.Scalar.RangeToPercent
PercentToRange = BABYLON.Scalar.PercentToRange
NormalizeRadians = BABYLON.Scalar.NormalizeRadians

# from babylon.sphericalPolynomial.ts
SphericalPolynomial = _js_class(BABYLON.SphericalPolynomial)
SphericalHarmonics = _js_class(BABYLON.SphericalHarmonics)

# from babylon.math.ts
Color3 = _js_math_class(BABYLON.Color3)
Color4 = _js_math_class(BABYLON.Color4)
Vector2 = _js_math_class(BABYLON.Vector2)
Vector3 = _js_math_class(BABYLON.Vector3)
Vector4 = _js_math_class(BABYLON.Vector4)
Size = _js_class(BABYLON.Size)
Quaternion = _js_math_class(BABYLON.Quaternion)
Matrix = _js_math_class(BABYLON.Matrix)
Plane = _js_class(BABYLON.Plane)
Viewport = _js_class(BABYLON.Viewport)
Frustum = _js_class(BABYLON.Frustum)
Axis = _js_class(BABYLON.Axis)
BezierCurve = _js_class(BABYLON.BezierCurve)
Angle = _js_class(BABYLON.Angle)
Arc2 = _js_class(BABYLON.Arc2)
Path2 = _js_class(BABYLON.Path2)
Path3D = _js_class(BABYLON.Path3D)
Curve3 = _js_class(BABYLON.Curve3)
PositionNormalVertex = _js_class(BABYLON.PositionNormalVertex)
PositionNormalTextureVertex = _js_class(BABYLON.PositionNormalTextureVertex)
Tmp = _js_class(BABYLON.Tmp)

# from babylon.math.SIMD.ts
SIMDHelper = _js_class(BABYLON.SIMDHelper)
